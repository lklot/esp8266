#define BLINKER_WIFI                    //官方wifi协议库  #define BLINKER_MIOT_LIGHT              //小爱灯类库  #define BLINKER_PRINT Serial            //串口协议库 #include <Blinker.h>                    //官方库#include <ESP8266WiFi.h>                //配网库文件 char auth[] = "6b67";  char ssid[] = "";//自动配网留空  char pswd[] = "";//自动配网留空   int GPIO=0;//继电器输出  //*******新建组件对象BlinkerButton Button1("btn-kg");              //设置app按键的键名  //*******app上按下按键即会执行该函数app里按键有2种模式3钟不同样式，下面写出所有的开关状态。  void button1_callback(const String & state){              //用state来存储组键的值按键 : "tap"(点按); "pre"(长按); "pup"(释放)开关 : "on"(打开); "off"(关闭)  BLINKER_LOG("app操作了!: ", state);                //串口打印    if  (digitalRead(GPIO)==LOW) {       //如果state是off状态      BLINKER_LOG("灭灯!");                         //串口打印       digitalWrite(GPIO,HIGH);     Button1.color("#FF0000");                  //设置app按键是红色      Button1.text("亮灯");      Button1.print("on");                      //反馈回按键状态是开    }    else if (digitalRead(GPIO)==HIGH) {              //如果state是on状态      BLINKER_LOG("亮灯!");                           //串口打印      digitalWrite(GPIO,LOW);       Button1.color("#00FFFF");                     //设置app按键是浅蓝色      Button1.text("灯灭");     Button1.print("off");                         //反馈回按键状态是关    }}    //*******如果小爱有对设备进行操作就执行下面   void miotPowerState(const String & state){      BLINKER_LOG("小爱语音操作!");              //串口打印    if (state == BLINKER_CMD_ON){         digitalWrite(GPIO,HIGH);         BlinkerMIOT.powerState("on");          BLINKER_LOG("亮灯!");           Button1.color("#FF0000");                  //设置app按键是红色          Button1.text("亮灯");          Button1.print("on");                      //反馈回按键状态是开         BlinkerMIOT.print();      }      else if (state == BLINKER_CMD_OFF){          digitalWrite(GPIO,LOW);          BlinkerMIOT.powerState("off");          Button1.color("#00FFFF");                     //设置app按键是浅蓝色         Button1.text("灯灭");         Button1.print("off");                         //反馈回按键状态是关         BLINKER_LOG("灭灯!");          BlinkerMIOT.print();      }  }    //*******app定时向设备发送心跳包, 设备收到心跳包后会返回设备当前状态30s~60s一次  void heartbeat()  {    BLINKER_LOG("状态同步!");      if (digitalRead(GPIO)==HIGH)       {         Button1.print("on");            Button1.color("#FF0000");                  //设置app按键是红色        Button1.text("亮灯");     }     else      {     Button1.print("off");    Button1.color("#00FFFF");                     //设置app按键是浅蓝色    Button1.text("灯灭");      }  } void setup()  {      // 初始化串口      Serial.begin(115200);      WiFi.mode(WIFI_STA);//自动配网开始      int cnt = 0;      while (WiFi.status() != WL_CONNECTED) {      delay(500);     Serial.print(".");      if (cnt++ >= 10) {      WiFi.beginSmartConfig();      while (1) {      delay(1000);      if (WiFi.smartConfigDone()) {      Serial.println();      Serial.println("SmartConfig: Success");        break;      }      }      }      }//配网结束       // 初始化串口    Serial.begin(115200);    BLINKER_DEBUG.stream(Serial);   // 初始化有LED的IO    pinMode(GPIO, OUTPUT);    digitalWrite(GPIO, HIGH);              //默认上电接通继电器。    // 初始化blinker   Blinker.begin(auth, ssid, pswd);    Button1.attach(button1_callback);              //app上操作必须的注册回调函数关联按键名“Button1”和判断程序“button1_callback"    BlinkerMIOT.attachPowerState(miotPowerState);              //小爱语音操作注册函数   }    void loop() {     Blinker.run(); }
